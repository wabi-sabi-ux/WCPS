@using Microsoft.AspNetCore.Identity
@using WCPS.WebApp.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    // Compute the display name once (async allowed here)
    string displayName = "User";
    if (SignInManager.IsSignedIn(User))
    {
        var currentUser = await UserManager.GetUserAsync(User);
        displayName = currentUser?.FullName ?? User.Identity?.Name ?? "User";
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="partialUserMenu" role="button"
               data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-person-circle"></i> @displayName
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="partialUserMenu">
                <li>
                    <a class="dropdown-item" asp-controller="Claims" asp-action="Index">My Claims</a>
                </li>
                @if (User.IsInRole("CpdAdmin"))
                {
                    <li>
                        <a class="dropdown-item" asp-controller="AdminClaims" asp-action="Index">Admin Dashboard</a>
                    </li>
                }
                <li><hr class="dropdown-divider" /></li>
                <li class="px-3">
                    <form asp-area="Identity" asp-page="/Account/Logout" method="post" id="logoutFormPartial">
                        <button type="submit" class="btn btn-link dropdown-item">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
