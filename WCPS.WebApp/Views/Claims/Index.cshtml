@using WCPS.WebApp.Models
@inject Microsoft.AspNetCore.Identity.UserManager<WCPS.WebApp.Models.ApplicationUser> UserManager
@model IEnumerable<WCPS.WebApp.Models.ClaimRequest>

@{
    ViewData["Title"] = "My Claims";
    var currentUserId = UserManager.GetUserId(User);
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">My Claims</h2>
        <a class="btn btn-primary" asp-action="Create">+ New Claim</a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">You have not submitted any claims yet.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover table-bordered align-middle">
                <thead class="table-light">
                    <tr>
                        <th>Ref #</th>
                        <th>Title</th>
                        <th>Amount Claimed</th>
                        <th>Amount Approved</th>
                        <th>Status</th>
                        <th>Created</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var claim in Model)
                    {
                        <tr>
                            <td class="text-break" style="min-width:160px;">@claim.ClaimRef</td>
                            <td>@claim.Title</td>
                            <td>₹@claim.AmountClaimed.ToString("N2")</td>
                            <td>
                                @if (claim.AmountApproved.HasValue)
                                {
                                    <span>₹@claim.AmountApproved.Value.ToString("N2")</span>
                                }
                                else
                                {
                                    <span class="text-muted">—</span>
                                }
                            </td>
                            <td>
                                @if (claim.Status == ClaimStatus.Pending)
                                {
                                    <span class="badge bg-warning text-dark">Pending</span>
                                }
                                else if (claim.Status == ClaimStatus.Approved)
                                {
                                    <span class="badge bg-success">Approved</span>
                                }
                                else if (claim.Status == ClaimStatus.Rejected)
                                {
                                    <span class="badge bg-danger">Rejected</span>
                                    <div class="small text-muted mt-1">Your claim was rejected.</div>
                                }
                            </td>
                            <td>@claim.CreatedAt.ToLocalTime().ToString("dd MMM yyyy, HH:mm")</td>
                            <td class="text-nowrap">
                                <a asp-action="Details" asp-route-id="@claim.Id" class="btn btn-sm btn-outline-secondary me-1">View</a>

                                @* Owner-only edit/delete while pending *@
                                @if (claim.EmployeeId == currentUserId && claim.Status == ClaimStatus.Pending)
                                {
                                    <a asp-action="Edit" asp-route-id="@claim.Id" class="btn btn-sm btn-outline-primary me-1">Edit</a>
                                    <a asp-action="Delete" asp-route-id="@claim.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                                }
                                else if (!string.IsNullOrEmpty(claim.ReceiptPath))
                                {
                                    <a asp-action="DownloadReceipt" asp-route-id="@claim.Id" class="btn btn-sm btn-outline-info">Receipt</a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>
