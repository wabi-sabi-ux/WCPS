@model IEnumerable<WCPS.WebApp.Models.ClaimRequest>

@{
    ViewData["Title"] = "My Claims";
}

<h2 class="mb-3">My Claims</h2>

<div class="d-flex mb-3">
    <a asp-action="Create" class="btn btn-sm btn-success me-2">+ New Claim</a>
    <input id="claimsSearch" class="form-control form-control-sm w-auto ms-auto" placeholder="Search by ref / title" />
</div>

<table id="claimsTable" class="table table-striped table-hover align-middle">
    <thead class="table-light">
        <tr>
            <th>Claim Ref</th>
            <th>Title</th>
            <th>Amount Claimed</th>
            <th>Status</th>
            <th>Receipt</th>
            <th>Created</th>
            <th style="width:160px;">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var c in Model)
        {
            <tr>
                <td>@c.ClaimRef</td>
                <td>@c.Title</td>
                <td>@c.AmountClaimed.ToString("C")</td>
                <td>
                    @switch (c.Status)
                    {
                        case WCPS.WebApp.Models.ClaimStatus.Pending:
                            <span class="badge bg-warning text-dark">Pending</span>
                            ;
                            break;
                        case WCPS.WebApp.Models.ClaimStatus.Approved:
                            <span class="badge bg-success">Approved</span>
                            ;
                            break;
                        case WCPS.WebApp.Models.ClaimStatus.Rejected:
                            <span class="badge bg-danger">Rejected</span>
                            ;
                            break;
                    }
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(c.ReceiptPath))
                    {
                        <button type="button"
                                class="btn btn-sm btn-outline-primary preview-btn"
                                data-claim-id="@c.Id"
                                data-src="@Url.Action("DownloadReceipt", "Claims", new { id = c.Id, mode = "preview" })">
                            Preview
                        </button>
                    }
                    else
                    {
                        <span class="text-muted">-</span>
                    }
                </td>
                <td>@c.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</td>
                <td>
                    <a asp-action="Details" asp-route-id="@c.Id" class="btn btn-sm btn-info me-1">Details</a>
                    @* Add other actions if needed *@
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Receipt Preview Modal -->
<div class="modal fade" id="receiptPreviewModal" tabindex="-1" aria-labelledby="receiptPreviewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="receiptPreviewModalLabel">Receipt Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0" style="height:80vh;">
                <iframe id="receiptPreviewFrame" src="" width="100%" height="100%" frameborder="0"></iframe>
            </div>
            <div class="modal-footer">
                <a id="modalDownloadBtn" class="btn btn-secondary" href="#" role="button" target="_blank">Open in new tab</a>
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            // Search/filter rows by ref/title
            const searchInput = document.getElementById('claimsSearch');
            const table = document.getElementById('claimsTable');
            searchInput.addEventListener('input', function () {
                const q = this.value.trim().toLowerCase();
                const rows = table.querySelectorAll('tbody tr');
                rows.forEach(r => {
                    if (!q) { r.style.display = ''; return; }
                    const ref = r.children[0].textContent.trim().toLowerCase();
                    const title = r.children[1].textContent.trim().toLowerCase();
                    if (ref.includes(q) || title.includes(q)) r.style.display = '';
                    else r.style.display = 'none';
                });
            });

            // Preview modal behavior
            const previewModalEl = document.getElementById('receiptPreviewModal');
            const previewModal = new bootstrap.Modal(previewModalEl);
            const iframe = document.getElementById('receiptPreviewFrame');
            const downloadBtn = document.getElementById('modalDownloadBtn');

            document.querySelectorAll('.preview-btn').forEach(btn => {
                btn.addEventListener('click', function () {
                    const src = this.getAttribute('data-src');
                    // set iframe src for inline preview
                    iframe.setAttribute('src', src);
                    // set download link (mode=download)
                    const claimId = this.getAttribute('data-claim-id');
                    const downloadUrl = '@Url.Action("DownloadReceipt", "Claims")' + '/' + claimId + '?mode=download';
                    downloadBtn.setAttribute('href', downloadUrl);
                    previewModal.show();
                });
            });

            // Reset iframe when modal hides to stop PDF streaming
            previewModalEl.addEventListener('hidden.bs.modal', function () {
                iframe.setAttribute('src', '');
            });
        })();
    </script>
}
